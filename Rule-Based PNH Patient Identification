Briefing Document: Rule-Based PNH Patient Identification Tool
________________________________________
Project Overview:
The objective is to develop a rule-based, web-based tool that enables healthcare professionals (HCPs) to screen patients during consultations and identify potential PNH (Paroxysmal Nocturnal Haemoglobinuria) cases using a structured algorithm.
________________________________________
Core Requirements:
•	Rule-Based Engine:
The logic follows the provided clinical algorithm exactly as structured in the attached in the file the file shared.
•	Interactive HCP Interface:
o	Web-based, intuitive UI designed for use in real-time during patient screening.
o	YES/NO decision tree with clear navigation (YES answers on the right, NO on the left).
o	Optimized for fast clinical use in outpatient settings.
•	Report Generation: 
o	A report to be generated after each screening session.
o	The report should include:
	Answers given
	The decision path followed
	Final recommendation:
	“High Potential PNH Patient –”
	“Might be potential”
o	Report to be downloadable and printable (PDF preferred).
•	Bulk Upload Feature:
o	Ability to upload multiple patient entries via Excel/CSV.
o	Tool should process the batch and return individual screening results and reports for each patient.
________________________________________
Deliverables Required in the Proposal:
•	Technical approach and understanding of the project
•	Solution design 
•	Technology stack proposed
•	Timeline and development milestones
•	Visual mock-ups or wireframes (if possible)
•	Hosting and deployment recommendations
•	Cost estimate and payment terms
•	Post-launch support and maintenance offering (if available)
________________________________________

1. Login/Authentication Page
Purpose: Secure access for healthcare professionals.
Features: Username, password fields, and a "Forgot Password" link.
2. Dashboard
Purpose: Overview of tool functionalities.
Features: Navigation menu, recent activity, quick access buttons for screening, bulk upload, and report generation.
3. Patient Screening Page
Purpose: Real-time patient screening using the decision tree.
Features:
Patient Information Form: Fields for patient details (name, age, medical history).
Decision Tree Interface: YES/NO questions with clear navigation (YES on the right, NO on the left).
Progress Indicator: Visual representation of the screening progress.
4. Screening Results Page
Purpose: Display results of the screening session.
Features:
Summary of Answers: List of answers given during screening.
Decision Path: Visual representation of the decision path followed.
Final Recommendation: “High Potential PNH Patient” or “Might be potential”.
Download/Print Report: Button to download or print the report in PDF format.
5. Bulk Upload Page
Purpose: Upload multiple patient entries for batch processing.
Features:
Upload Form: Fields to upload Excel/CSV files.
Processing Indicator: Status of the batch processing.
Results Summary: List of individual screening results and links to download reports.
6. Reports Page
Purpose: Access and manage generated reports.
Features:
Report List: Table of generated reports with patient names, screening dates, and download links.
Search/Filter: Options to search and filter reports by date, patient name, or recommendation.
________________________________________
Attachment Provided:
•	PNH_Algorithm_Tree_Proper.xlsx
Please use this file to guide the logic and structure of the rule-based decision tool.

https://www.koruux.com/50-examples-of-healthcare-UI/
https://technologyrivers.com/blog/15-of-the-best-healthcare-app-designs-to-inspire-you-in-2025/
https://stfalcon.com/en/blog/post/clinical-decision-support-systems
________________________________________

Steps for Adding a New Patient
Access the Add Patient Form

Navigate to the "Add New Patient" section from the main dashboard.
Enter Patient Information

Fill in the patient's demographic details (e.g., name, age, gender, contact information).
Enter medical history, including past diagnoses, treatments, and allergies.
Input current medications and ongoing treatments.
Upload relevant documents (e.g., lab results, imaging reports).
Review and Confirm

Review the entered information for accuracy.
Confirm and save the patient data to the database.
Confirmation and Navigation

Display a confirmation message once the patient is successfully added.
Provide options to navigate to the patient dashboard or add another patient.
UI Design Ideas
1. Add New Patient Form
Header: "Add New Patient"
Form Sections:
Demographic Details: Fields for name, age, gender, contact information.
Medical History: Text area or fields for past diagnoses, treatments, allergies.
Current Medications: Fields for current medications and ongoing treatments.
Document Upload: Section to upload relevant documents (e.g., lab results, imaging reports).
Buttons:
Save: Button to save the patient information.
Cancel: Button to cancel the process and return to the dashboard.
2. Review and Confirmation
Review Section: Display all entered information for review.
Confirmation Message: "Patient successfully added."
Navigation Options: Buttons to navigate to the patient dashboard or add another patient.
Detailed UI Mockup Descriptions
Add New Patient Form
Header: "Add New Patient"
Demographic Details Section:
Name: Input field for the patient's name.
Age: Input field for the patient's age.
Gender: Dropdown menu for selecting gender.
Contact Information: Input fields for phone number and email address.
Medical History Section:
Past Diagnoses: Text area for entering past diagnoses.
Treatments: Text area for entering past treatments.
Allergies: Text area for entering known allergies.
Current Medications Section:
Medications: Input fields for current medications.
Ongoing Treatments: Input fields for ongoing treatments.
Document Upload Section:
Upload Button: Button to upload documents.
Action Buttons:
Save: Button to save the patient information.
Cancel: Button to cancel and return to the dashboard.
Review and Confirmation
Review Section: Display all entered information for review.
Confirmation Message: "Patient successfully added."
Navigation Options:
Patient Dashboard: Button to navigate to the patient dashboard.
Add Another Patient: Button to add another patient.

________________________________________

Flow for Bulk Patient Data Upload
Data Preparation

Template Download: Provide a downloadable template (e.g., CSV or Excel) for users to fill in patient data.
Data Validation: Ensure the template includes validation rules to minimize errors during upload.
Data Upload

Upload Interface: Create an interface where users can upload the filled template.
Data Parsing: Parse the uploaded file to extract patient data.
Error Handling: Validate the data and provide feedback on any errors or inconsistencies.
Data Integration

Database Insertion: Insert the validated data into the database.
Confirmation: Provide a confirmation message once the data is successfully uploaded.
Data Display

Patient List View: Display the uploaded patient data in a list or table format.
Search and Filter: Allow users to search and filter the patient data for easy access.
UI Design Ideas
1. Bulk Data Upload Page
Upload Section: A section where users can upload the patient data file.
Template Download: A button to download the data template.
Upload Button: A button to upload the filled template.
Progress Indicator: A progress bar or spinner to indicate the upload status.
Error Messages: Display any errors or validation issues with the uploaded data.
2. Patient List View
Table Format: Display patient data in a table with columns for key information (e.g., Name, Age, Gender, Medical History).
Search Bar: A search bar to quickly find specific patients.
Filter Options: Filters to narrow down the list based on criteria like age, gender, diagnosis, etc.
Pagination: Pagination controls for navigating through large datasets.
Example UI Mockups
Bulk Data Upload Page
Patient List View
Detailed UI Mockup Descriptions
Bulk Data Upload Page
Header: "Bulk Patient Data Upload"
Template Download Button: "Download Template"
File Upload Section: "Choose File" button to select the file from the computer.
Upload Button: "Upload Data" button to start the upload process.
Progress Indicator: A progress bar showing the upload status.
Error Messages: Area to display any errors or validation issues with the uploaded data.
Patient List View
Header: "Patient List"
Search Bar: Input field to search for patients by name or other criteria.
Filter Options: Dropdowns or checkboxes to filter the list by age, gender, diagnosis, etc.
Table: Columns for patient details such as Name, Age, Gender, Medical History, Last Visit, etc.
Pagination Controls: Buttons to navigate through pages of patient data.

________________________________________

Flow of the CDSS Platform
User Authentication and Authorization

Login/Sign-Up: Secure login for doctors using credentials or biometric authentication.
Role-Based Access Control: Different access levels based on user roles (e.g., doctors, nurses, administrators).
Patient Data Management

Patient Registration: Adding new patients with demographic and medical history.
Patient Dashboard: Viewing and managing patient records, including medical history, current medications, and lab results.
Clinical Decision Support

Symptom Input: Doctors input patient symptoms and clinical findings.
Diagnostic Suggestions: The system provides potential diagnoses based on input data using AI algorithms.
Treatment Recommendations: Suggested treatments and medications based on diagnosis and patient history.
Alerts and Reminders: Notifications for critical values, medication interactions, and follow-up reminders.
Integration with Medical Devices and EHR

Device Integration: Connecting with medical devices for real-time data collection.
Electronic Health Records (EHR): Integration with existing EHR systems for seamless data exchange.
Reporting and Analytics

Clinical Reports: Generating detailed reports for patient visits, treatments, and outcomes.
Analytics Dashboard: Visualizing data trends, treatment effectiveness, and patient outcomes.
Feedback and Continuous Improvement

Doctor Feedback: Collecting feedback from doctors to improve the system.
System Updates: Regular updates based on feedback and new medical guidelines.
UI Design Ideas
1. Login Page
Simple and Secure: Clean design with fields for username, password, and options for biometric login.
Forgot Password: Easy access to password recovery options.
2. Patient Dashboard
Overview Section: Summary of patient information, including name, age, and recent visits.
Tabs for Detailed Information: Separate tabs for medical history, current medications, lab results, and imaging.
Search Functionality: Quick search to find specific patient records.
3. Symptom Input and Diagnostic Suggestions
Symptom Input Form: Intuitive form for entering symptoms, clinical findings, and other relevant data.
Diagnostic Suggestions: Display potential diagnoses with confidence levels and supporting evidence.
Interactive Charts: Visual representation of symptom correlations and diagnostic probabilities.
4. Treatment Recommendations
Treatment Options: List of recommended treatments with detailed information.
Medication Interaction Alerts: Highlight potential interactions with current medications.
Follow-Up Reminders: Automated reminders for follow-up visits and tests.
5. Analytics Dashboard
Data Visualization: Charts and graphs showing patient outcomes, treatment effectiveness, and other key metrics.
Filter Options: Ability to filter data by date, diagnosis, treatment type, etc.
Export Functionality: Options to export reports and data for further analysis.
6. Feedback and Updates
Feedback Form: Easy-to-use form for doctors to provide feedback on the system.
Update Notifications: Inform users about new features and updates.
